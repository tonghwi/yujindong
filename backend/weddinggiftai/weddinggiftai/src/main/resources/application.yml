spring:
  config:
    import: optional:classpath:secret-application.yml
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile

          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            scope: profile_nickname, account_email
            client-name: kakao

        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo

          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: 6379
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  output:
    ansi:
      enabled: always

  thymeleaf:
    cache: false

jwt:
  secret: my-super-secret-key-1234567890123456
  expiration: 3600000

frontend:
  redirect-url: ${FRONTEND_REDIRECT_URL:http://localhost:3000}


server:
  port: 8080